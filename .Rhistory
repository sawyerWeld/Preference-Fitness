read.csv(1/quiz1_data/hw1_data.csv)
read.csv('1/quiz1_data/hw1_data.csv')
data <- read.csv('1/quiz1_data/hw1_data.csv')
head(data)
tail(data)
data[47]
data[,47]
data[47,]
ozone <- data$Ozone
ozone
goodOzone <- [!ozone.isNan()]
goodOzone <- [!is.na()]
goodOzone <- d[!is.na(d)]
goodOzone <- ozone[!is.na(ozone)]
goodOzone
153-116
mean(goodOzone)
q18 <- mean(data$Ozone)
q18
q18 <- mean(goodOzone)
q18
q18 <- data[ which(ozone > 31 && temp > 90)]
q18 <- data[ which(Ozone > 31 && Temp > 90)]
q18 <- subset(data, Ozone > 31 & Temp > 90)
mean(q18$Solar.R)
rm(q18)
q19 <- subset(data, Month == 6)
mean(q19$Temp)
rm(q19)
q20 <- subset(data, Month == 6)
max(q20$Ozone)
q20
q20 <- q20$Ozone
q20
max(q20)
q201 <- subset(q20,!is.na(ozone))
q201
q20
rm(q20)
rm(q201)
ozone
q20 <- subset(data, Month == 5)
q20
na.omit(q20)
q20 <- subset(data, Month == 5)
q20
q20[complete.cases(q20[1,])]
q20[complete.cases(q20[1,]),]
max(q20$Ozone)
R.version.string
install.packages("swirl")
packageVersion("swirl")
library(swirl)
ls()
rm(list=ls())
install_from_swirl("R Programming")
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
mydiv <- z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls(0)
ls()
x <- 9
ls()
dir()
?list.file
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create()
dir.create('testdir')
setwd(dir = testdir)
setwd(dir = 'testdir')
file.create('mytest.R')
dir()
file.exists()
file.exists('mytest.R')
file.info('')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
?file.copy()
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
file.path('folder1', 'folder2')
ls()
?dir.create
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'), recursive = T)
dir.create(file.path('testdir2','testdir3'), recursive = TRUE)
setwd(old.dir)
a:20
1:20
pi:10
15:1
?':'
seq(1:20)
seq(1, 20)
seq(1, 20, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, tiems=40)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
help
?help
swirl()
c(0.5, 55, -10, 6)
num_vec <- c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Sawyer")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!, sep = " "")
paste("Hello", "world!, sep = " "")
paste("Hello", "world!, sep = " ")
;
a
adsaf
kaldf
)
""
paste("Hello", "world!", sep = " ")
paste(seq(1,3),c("X", "Y", "Z"), sep = "")
paste(1:3,c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[in.na(x)]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vecT <- c(foo = 11, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- (1:20, 4, 5)
my_matrix2 <- (c(1:20), 4, 5)
my_matrix2 <- (data = c(1:20), nrow = 4, ncol = 5)
my_matrix2 <- (data = 1:20, nrow = 4, ncol = 5)
adsfa
my_matrix2 <- (data = NA, nrow = 4, ncol = 5)
my_matrix2 <- (data = NA nrow = 4 ncol = 5)
my_matrix2 <- my_data
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age","weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
hist(iris)
hist(iris$Sepal.Length)
plot(cos)
curve(sin, -pi, 3*pi)
chippy <- function(x) sin(cos(x)*exp(-x/2))
curve(chippy, -8, 7, n=2001)
swirl()
library("swirl", lib.loc="D:/HDD Programs/R-3.4.0/library")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range())
lapply(flag_shapes, range
)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
head(flags)
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
data("iris")
iris$Sepal.Length
lapply(iris$Sepal.Length, mean)
mean(iris$Sepal.Length)
?apply
View(iris)
hist(iris)
hist(iris$Sepal.Length)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
data(mtcars)
View(iris)
?mtcars
mtcars$mpg
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(split(mtcars$pg,mtcars$cyl),mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
a <- tapply(mtcars$hp, mtcars$cyl, mean)
a[3] - a[1]
debug(ls)
ls()
x <- rnorm(100)
hist(x)
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
par(mar = c(2,2,2,2))
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y,pch=2)
plot(x,y,pch=3)
plot(x,y,pch=4)
plot(x,y,pch=20)
plot(x,y,pch=`9`)
plot(x,y,pch=19)
example("points")
plot(x,y,pch=19)
rm(pchShow)
x <- rnorm(20)
y <- rnorm(20)
plot(x,y)
plot(x,y,pch = 20)
y <- rnorm(100)
x <- rnorm(100)
plot(x,y,pch = 22)
plot(x,y,pch = 23)
plot(x,y,pch = 27)
plot(x,y,pch = 25)
plot(x,y,pch = 19)
plot(x,y,pch = 20)
plot(x,y)
legend("topleft",legend = "Data", pch = 20)
plot(x,y,pch = 20)
legend("topleft",legend = "Data", pch = 20)
fit <- lm(x ~ y)
abline(fit, lwd = 3)
abline(fit, lwd = 3, col = "blue")
x <- rnorm(500)
y <- rnorm(500)
plot(x,y)
legend("topleft",legend = "Data", pch = 20)
plot(x,y,pch=20)
legend("topleft",legend = "Data", pch = 20)
fit <- lm(x~y)
abline(fit, lwd = 3, col = "blue")
z <- rpois(200)
z <- rpois(200, 2)
par(mfrow = c(2,1))
plot(x,y,pch=20)
plot(x,z,pch=20)
z <- rpois(500,2)
plot(x,z,pch=20)
par("mar")
?Devices
library(ggplot2)
swirl()
library(swirl)
swirl()
install_course("Exploratory Data Analysis")
swirl()
head(airquality)
xyplot(ozone~wind, data = airquality)
xyplot(Ozone~wind, data = airquality)
xyplot(Ozone~Wind, data = airquality)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.abline
?lpoints
demo()
demo(Japanese)
plot(rand(100)~rand(100))
?rand
plot(rnorm(100)~rnorm(100))
plot(rnorm(100),rnorm(100))
plot(rnorm(100),rnorm(100))
plot(rnorm(100),rnorm(100))
plot(rnorm(100),rnorm(100))
plot(rnorm(100),rnorm(100))
plot(rnorm(100),rnorm(100)+10)
getOption("repos")
devtools::install_url("http://cran.r-project.org/src/contrib/rmarkdown0.5.1.tar.gz")
install.packages("rmarkdown", contriburl = "http://cran.r-project.org/src/contrib", type = "source")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
library(swirl)
swirl()
install_course(Statistical Inference)
install_course("Statistical Inference")
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
1
info()
1-x
skip()
deck
52
1/13
0
3/13
3/52
2/52
2/51
.8
1.6*.8
1.6*.8 / 2
.64
mypdf
?integrate
integrate(mypdf, 0, 1.6)
sqrt(2)
skip()
skip()
skip()
0
exit
exit()
quit()
?paste
x = rand(200)
x = rnorm(200)
y = {1,2,3,4,5}
y = (1,2,3,4,5)
y = [1,2,3,4,5]
y = c(1,2,3,4,5)
clear
first = c(499500, 1999000, 4498500, 7998000, 12497500, 17997000, 24496500, 31996000, 40495500, 49995000)
second = c(1996, 3996, 5996, 7996, 9996, 11996, 13996, 15996, 17996, 19996)
plot(first ~ second)
num = c(1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000)
plot(first + second ~ num)
plot(first , second ~ num)
num = c(1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000)
first = c(499500, 1999000, 4498500, 7998000, 12497500, 17997000, 24496500, 31996000, 40495500, 49995000)
second = c(1996, 3996, 5996, 7996, 9996, 11996, 13996, 15996, 17996, 19996)
df = data.frame(num,first,second)
View(df)
plot(num,first,type="l",col="red")
lines(num,second,col="green")
plot(num,first,type="l",col="red")
lines(num,second,col="green",lwd=10)
plot(num,first,type="l",col="red",lwd=2)
lines(num,second,col="green",lwd=2)
x <- rnorm(200)
y <- rnorm(200)
plot(x,y)
n = c(10,1000,10000)
comparisons = c(38,11610,149107)
plot n ~ comparisons
plot (n ~ comparisons)
plot (comparisons ~ n)
lines()
lines(lowess())
comparisons2 <- c(61, 18044, 266330)
plot(comparisons2 ~ n)
x <- cbind(n,comparisons,comparisons2)
View(x)
setwd("C:/Thesis/Thesis") # Desktop
data <- read.table("mallows_vs_cosine.txt",header = FALSE)
setwd("C:/Thesis/Thesis") # Desktop
data <- read.table("cosine_vs_ktau.txt",header = FALSE)
plot(data[0] , data[1])
data[1]
data[0]
data <- setNames("Ktau","Cos")
data <- read.table("cosine_vs_ktau.txt",header = FALSE)
cos <- data[[1]]
kt <- data[[1]]
cos <- data[[2]]
plot(kt,cos)
setwd("C:/Thesis/Thesis") # Desktop
data <- read.table("cosine_vs_ktau.txt",header = FALSE)
kt <- data[[1]]
cos <- data[[2]]
plot(kt,cos)
library(ggplot2)
qplot(kt,cos)
qplot(cos,kt)
qplot(kt,cos)
setwd("C:/Thesis/Thesis") # Desktop
library(ggplot2)
data <- read.table("cosine_vs_ktau.txt",header = FALSE)
kt <- data[[1]]
cos <- data[[2]]
qplot(kt,cos)
